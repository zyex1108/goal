cmake_minimum_required(VERSION 2.8)
project(Goal CXX)

set(GOAL_MAJOR "0")
set(GOAL_MINOR "2")
set(GOAL_PATCH "0")

set(SCOREC_PREFIX "" CACHE STRING "Scorec installation directory")
set(Trilinos_PREFIX "" CACHE STRING "Trilinos installation directory")
set(GOAL_FAD_SIZE "16" CACHE STRING "Maximum Sacado derivative array size")
option(GOAL_OPTIMIZE "Compile with optimizations" ON)
option(GOAL_SYMBOLS "Compile with symbols" ON)
option(GOAL_DISABLE_CHECKS "Disable basic sanity checks for speed" OFF)
message(STATUS "GOAL_FAD_SIZE:  ${GOAL_FAD_SIZE}")
message(STATUS "GOAL_OPTIMIZE: ${GOAL_OPTIMIZE}")
message(STATUS "GOAL_SYMBOLS: ${GOAL_SYMBOLS}")
message(STATUS "GOAL_DISABLE_CHECKS: ${GOAL_DISABLE_CHECKS}")

set(FLAGS "-std=c++11")
if(GOAL_OPTIMIZE)
  set(FLAGS "${FLAGS} -O2")
else()
  set(FLAGS "${FLAGS} -O0")
endif()
if(GOAL_SYMBOLS)
  set(FLAGS "${FLAGS} -g")
endif()
set(FLAGS "${FLAGS} -Wall -Wpedantic -Werror")
set(FLAGS "${FLAGS} -fno-omit-frame-pointer")
if(${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU")
  set(FLAGS "${FLAGS} -fmax-errors=1")
elseif(${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
  set(FLAGS "${FLAGS} -ferror-limit=1")
endif()
set(CMAKE_CXX_FLAGS "${FLAGS}")

set(CMAKE_SKIP_BUILD_RPATH False)
set(CMAKE_BUILD_WITH_INSTALL_RPATH False)
list(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES
  "${CMAKE_INSTALL_PREFIX}/lib" isSystemDir)
if("${isSystemDir}" STREQUAL "-1")
  set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
endif("${isSystemDir}" STREQUAL "-1")
set(CMAKE_INSTALL_RPATH_USE_LINK_PATH True)

find_package(SCOREC 1.0.1 REQUIRED PATHS ${SCOREC_PREFIX})
find_package(Trilinos 12.0.0 REQUIRED PATHS ${Trilinos_PREFIX})

list(REMOVE_DUPLICATES Trilinos_INCLUDE_DIRS)
list(REMOVE_DUPLICATES Trilinos_TPL_INCLUDE_DIRS)
list(REMOVE_DUPLICATES Trilinos_LIBRARIES)
list(REMOVE_DUPLICATES Trilinos_TPL_LIBRARIES)

list(FIND Trilinos_PACKAGE_LIST Pamgen PamgenListIdx)
if(NOT PamgenListIdx GREATER -1)
message(FATAL_ERROR "Trilinos: pamgen not enabled")
endif()

list(FIND Trilinos_PACKAGE_LIST Phalanx PhalanxListIdx)
if(NOT PhalanxListIdx GREATER -1)
message(FATAL_ERROR "Trilinos: phalanx not enabled")
endif()

list(FIND Trilinos_PACKAGE_LIST Belos BelosListIdx)
if(NOT BelosListIdx GREATER -1)
message(FATAL_ERROR "Trilinos: belos not enabled")
endif()

list(FIND Trilinos_PACKAGE_LIST Ifpack2 Ifpack2Idx)
if(NOT Ifpack2Idx GREATER -1)
message(FATAL_ERROR "Trilinos: ifpack2 not enabled")
endif()

list(FIND Trilinos_TPL_LIST MPI MPIListIdx)
if(NOT MPIListIdx GREATER -1)
message(FATAL_ERROR "Trilinos: mpi not enabled")
endif()

list(FIND Trilinos_TPL_LIST Boost BoostIdx)
if(NOT BoostIdx GREATER -1)
message(FATAL_ERROR "Trilinos: boost is not enabled")
endif()

message(STATUS "found Trilinos: ${Trilinos_DIR} (${Trilinos_VERSION})")
message(STATUS "found SCOREC: ${SCOREC_DIR} (${SCOREC_VERSION})")

add_subdirectory(src)
